// Prisma schema for ExamBot MVP (Supabase Postgres)

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Exam {
  id         Int       @id @default(autoincrement())
  title      String
  objectives String
  rubric     String
  plan       Json?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  documents  Document[]
  assignments Assignment[]
  attempts   Attempt[]

  @@index([createdAt])
}

model Document {
  id        Int      @id @default(autoincrement())
  exam      Exam     @relation(fields: [examId], references: [id])
  examId    Int
  name      String
  mimeType  String
  url       String   // Supabase Storage URL
  text      String?  // Extracted plain text (PDF only for MVP)
  createdAt DateTime @default(now())

  @@index([examId])
}

model Assignment {
  id        Int      @id @default(autoincrement())
  exam      Exam     @relation(fields: [examId], references: [id])
  examId    Int
  assignee  String   // simple text user id (no auth)
  status    String   @default("pending")
  createdAt DateTime @default(now())

  @@index([examId])
  @@index([assignee])
}

model Attempt {
  id          Int       @id @default(autoincrement())
  exam        Exam      @relation(fields: [examId], references: [id])
  examId      Int
  assignee    String
  status      String    @default("in_progress")
  startedAt   DateTime  @default(now())
  completedAt DateTime?
  totalScore  Float?
  answers     Answer[]
  transcripts Transcript[]

  @@index([examId])
  @@index([assignee])
}

model Answer {
  id         Int      @id @default(autoincrement())
  attempt    Attempt  @relation(fields: [attemptId], references: [id])
  attemptId  Int
  questionId String
  prompt     String
  answerText String
  score      Int
  rationale  String
  createdAt  DateTime @default(now())

  @@index([attemptId])
  @@index([questionId])
}

model Transcript {
  id        Int      @id @default(autoincrement())
  attempt   Attempt  @relation(fields: [attemptId], references: [id])
  attemptId Int
  role      String
  text      String
  ts        DateTime @default(now())
  createdAt DateTime @default(now())

  @@index([attemptId])
}
